name: Tag Release

on:
  push:
    tags:
      - '*-*.*.*'  # Matches patterns like "module1-0.1.1"

jobs:
  publish-module:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Parse tag and extract module info
        id: parse-tag
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}

          # Extract module name and version from tag (e.g., "my-module-0.1.1")
          # Version pattern: semantic version (x.y.z with optional pre-release/build metadata)
          if [[ $TAG_NAME =~ ^(.+)-([0-9]+\.[0-9]+\.[0-9]+.*)$ ]]; then
            MODULE_NAME="${BASH_REMATCH[1]}"
            VERSION="${BASH_REMATCH[2]}"
          else
            echo "Error: Tag format should be 'module-version' (e.g., 'my-module-0.1.1')"
            exit 1
          fi

          # Verify module directory exists
          if [ ! -d "$MODULE_NAME" ]; then
            echo "Error: Module directory '$MODULE_NAME' does not exist"
            exit 1
          fi

          # Check if module has Timoni setup
          if [ -f "$MODULE_NAME/scripts/timoni-setup.sh" ]; then
            IS_TIMONI="true"
          else
            IS_TIMONI="false"
          fi

          echo "module=$MODULE_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "is-timoni=$IS_TIMONI" >> $GITHUB_OUTPUT

          echo "Parsed tag: $TAG_NAME"
          echo "Module: $MODULE_NAME"
          echo "Version: $VERSION"
          echo "Is Timoni: $IS_TIMONI"

      - name: Setup tools and validate module
        uses: ./.github/actions/validate-modules
        with:
          module: ${{ steps.parse-tag.outputs.module }}
          is-timoni: ${{ steps.parse-tag.outputs.is-timoni }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish module to registry
        env:
          CUE_REGISTRY: 'github.com/amir-ahmad=ghcr.io'
        run: |
          cd ${{ steps.parse-tag.outputs.module }}
          echo "Publishing module: ${{ steps.parse-tag.outputs.module }} version v${{ steps.parse-tag.outputs.version }}"
          cue mod publish v${{ steps.parse-tag.outputs.version }}

      - name: Publish to Timoni
        if: steps.parse-tag.outputs.is-timoni == 'true'
        run: |
          timoni mod push ${{ runner.temp }}/timoni \
            oci://ghcr.io/amir-ahmad/cue-k8s-modules/timoni-${{ steps.parse-tag.outputs.module }} \
            --version "${{ steps.parse-tag.outputs.version }}"

      - name: Create summary
        run: |
          cat >> $GITHUB_STEP_SUMMARY << 'EOF'
          ## Module published ðŸŽ‰

          ## ðŸ“‹ Details
          - **Module:** `${{ steps.parse-tag.outputs.module }}`
          - **Version:** `v${{ steps.parse-tag.outputs.version }}`

          ### CUE Module
          ```
          ghcr.io/amir-ahmad/cue-k8s-modules/${{ steps.parse-tag.outputs.module }}:v${{ steps.parse-tag.outputs.version }}
          ```
          EOF

          if [[ "${{ steps.parse-tag.outputs.is-timoni }}" == "true" ]]; then
            cat >> $GITHUB_STEP_SUMMARY << 'EOF'
          ### Timoni Module
          ```
          oci://ghcr.io/amir-ahmad/cue-k8s-modules/timoni-${{ steps.parse-tag.outputs.module }}:${{ steps.parse-tag.outputs.version }}
          ```
          EOF
          fi
