exec cue export -e out --out yaml ./apps/...
cmp stdout golden.yaml

-- apps/monitoring.cue --
package app

out: (#App & {config: {
	name: "monitoring"
	common: {
		namespace: "monitoring"
		labels: {
			"environment": "production"
			"team": "platform"
		}
	}

	controller: prometheus: {
		type: "Deployment"
		pod: {
			image: "prom/prometheus:v2.45.0"
			ports: http: {
				port: 9090
				expose: true
			}
			env: {
				PROMETHEUS_RETENTION: "30d"
			}
		}
		spec: replicas: 1
	}

	// Custom objects using the object field
	object: {
		ServiceMonitor: "prometheus-sm": {
			apiVersion: "monitoring.coreos.com/v1"
			spec: {
				selector: matchLabels: {
					"app.kubernetes.io/name": "monitoring"
				}
				endpoints: [{
					port: "http"
					path: "/metrics"
				}]
			}
		}
		
		NetworkPolicy: "deny-all": {
			apiVersion: "networking.k8s.io/v1"
			spec: {
				podSelector: {}
				policyTypes: ["Ingress", "Egress"]
			}
		}
	}
}}).out

-- golden.yaml --
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: prometheus
    namespace: monitoring
    labels:
      app.kubernetes.io/name: monitoring
      app.kubernetes.io/component: prometheus
      environment: production
      team: platform
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: monitoring
        app.kubernetes.io/component: prometheus
    template:
      metadata:
        labels:
          app.kubernetes.io/name: monitoring
          app.kubernetes.io/component: prometheus
        annotations: {}
      spec:
        containers:
          - name: prometheus
            image: prom/prometheus:v2.45.0
            ports:
              - name: http
                containerPort: 9090
                protocol: TCP
            env:
              - name: PROMETHEUS_RETENTION
                value: 30d
            imagePullPolicy: IfNotPresent
- apiVersion: v1
  kind: Service
  metadata:
    name: prometheus
    namespace: monitoring
    labels:
      app.kubernetes.io/name: monitoring
      app.kubernetes.io/component: prometheus
      environment: production
      team: platform
  spec:
    ports:
      - name: http
        port: 9090
        protocol: TCP
        targetPort: 9090
    selector:
      app.kubernetes.io/name: monitoring
      app.kubernetes.io/component: prometheus
    type: ClusterIP
- apiVersion: monitoring.coreos.com/v1
  kind: ServiceMonitor
  metadata:
    name: prometheus-sm
    namespace: monitoring
    labels:
      app.kubernetes.io/name: monitoring
      environment: production
      team: platform
  spec:
    selector:
      matchLabels:
        app.kubernetes.io/name: monitoring
    endpoints:
      - port: http
        path: /metrics
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: deny-all
    namespace: monitoring
    labels:
      app.kubernetes.io/name: monitoring
      environment: production
      team: platform
  spec:
    podSelector: {}
    policyTypes:
      - Ingress
      - Egress
