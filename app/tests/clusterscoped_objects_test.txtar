exec cue export -e out --out yaml ./apps/...
cmp stdout golden.yaml

-- apps/cluster-resources.cue --
package app

out: (#App & {config: {
	name: "cluster-resources"

	// Test cluster-scoped objects using the ObjectMap
	object: clusterscoped: {
		Namespace: "app-namespace": {
			metadata: labels: {
				"purpose": "application"
				"security": "restricted"
			}
		}

		ClusterRole: "pod-reader": {
			rules: [{
				apiGroups: [""]
				resources: ["pods"]
				verbs: ["get", "list", "watch"]
			}, {
				apiGroups: ["apps"]
				resources: ["deployments", "replicasets"]
				verbs: ["get", "list"]
			}]
		}

		ClusterRoleBinding: "pod-reader-binding": {
			subjects: [{
				kind: "ServiceAccount"
				name: "default"
				namespace: "default"
			}]
			roleRef: {
				kind: "ClusterRole"
				name: "pod-reader"
				apiGroup: "rbac.authorization.k8s.io"
			}
		}

		StorageClass: "fast-storage": {
			provisioner: "kubernetes.io/aws-ebs"
			parameters: {
				type: "gp3"
				iops: "3000"
				throughput: "125"
			}
			reclaimPolicy: "Retain"
			allowVolumeExpansion: true
			volumeBindingMode: "WaitForFirstConsumer"
		}
	}
}}).out

-- golden.yaml --
- apiVersion: v1
  kind: Namespace
  metadata:
    name: app-namespace
    labels:
      app.kubernetes.io/name: cluster-resources
      purpose: application
      security: restricted
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: pod-reader
    labels:
      app.kubernetes.io/name: cluster-resources
  rules:
    - apiGroups:
        - ""
      resources:
        - pods
      verbs:
        - get
        - list
        - watch
    - apiGroups:
        - apps
      resources:
        - deployments
        - replicasets
      verbs:
        - get
        - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: pod-reader-binding
    labels:
      app.kubernetes.io/name: cluster-resources
  subjects:
    - kind: ServiceAccount
      name: default
      namespace: default
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: pod-reader
- apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    name: fast-storage
    labels:
      app.kubernetes.io/name: cluster-resources
  provisioner: kubernetes.io/aws-ebs
  parameters:
    type: gp3
    iops: "3000"
    throughput: "125"
  reclaimPolicy: Retain
  allowVolumeExpansion: true
  volumeBindingMode: WaitForFirstConsumer
